package org.lee.demo;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import org.apache.poi.hssf.usermodel.HSSFDateUtil;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.lee.dao.CourseImp;
import org.lee.model.Course;

public class InsertExcel {

	public InsertExcel(){}
	
	public static void start(InputStream in ,String path) throws FileNotFoundException, IOException {
		Workbook book = getWorkBook(in,path);   //1.?????????
		List<Sheet> sheets = getSheets(book);   //2.????????????
		SheetIterator(sheets);    //3.?????????????????	
	}
	
	//1.?????????
	public static Workbook getWorkBook(InputStream in,String path) throws FileNotFoundException, IOException {
		return path.endsWith(".xls") ? (new HSSFWorkbook(in))
				: (path.endsWith(".xlsx") ? (new XSSFWorkbook(in)) : (null));
	}
	//2.????????????
	private static List<Sheet> getSheets(Workbook book) {
		int numberOfSheets = book.getNumberOfSheets();
		System.out.println("numberOfSheets:" + numberOfSheets);
		List<Sheet> sheets = new ArrayList<Sheet>();
		for (int i = 0; i < numberOfSheets; i++) {
			sheets.add(book.getSheetAt(i));
		}
		return sheets;
	}
	//3.?????????????????
	private static void SheetIterator(List<Sheet> sheets) {
		for (int i = 0; i < sheets.size(); i++) {    //????????????
			Sheet sheet = sheets.get(i);
			if (sheet.getLastRowNum() > 1) {    //?????????????????????????????????????????????
				System.out.println(sheet.getSheetName() + "=============");     //??????????????????
			}
			Iterator<Row> iterator = sheet.iterator();   //??????
			//??????while???????????????
			while (iterator.hasNext()) {           //????????
				Row nextRow = iterator.next();
				if (nextRow.getRowNum() < 1) {
					continue;    
					//nextRow.getRowNum()?????????????????????????(getRowNum()=0)?????????????
				}
				
				//??????????????????????????????????????nextRow.getRowNum()=1
				Iterator<Cell> cellIterator = nextRow.cellIterator();
				Course course = new Course();
				while (cellIterator.hasNext()) {         //?????????????
					Cell cell = cellIterator.next();
					switch(cell.getColumnIndex()){
					case 0:
						//????????????????String???????????????cell.setCellType(Cell.CELL_TYPE_STRING);
						cell.setCellType(1);  
						course.setId(Integer.parseInt(cell.getStringCellValue()));
						break;
					case 1:   //?????????
						cell.setCellType(1);  
						course.setDept(cell.getStringCellValue());
						break;
					case 2:   //???????????
						cell.setCellType(1);
						course.setCourse(cell.getStringCellValue());
						break;
					case 3:
						cell.setCellType(1);
						course.setCredit(Double.parseDouble(cell.getStringCellValue()));
						break;
					
                   case 4:
                	   cell.setCellType(1);
                	   course.setBook_num(cell.getStringCellValue());
						break;
                   case 5:   //??????????????????????????
//                  	    ????????????????number???????????????cell.setCellType(Cell.CELL_TYPE_NUMERIC);
                	    cell.setCellType(0);
						SimpleDateFormat ftm = new SimpleDateFormat("yyyy-MM-dd");
						double value = cell.getNumericCellValue();
						Date date = org.apache.poi.ss.usermodel.DateUtil.getJavaDate(value);
						if (HSSFDateUtil.isCellDateFormatted(cell)) {
							course.setPublish_date(ftm.format(date));
							//?????????????????????????????????????????????????
						}
//					   cell.setCellType(1);
//					   course.setPublish_date(cell.getStringCellValue());
						break;
                   case 6:
                	   cell.setCellType(1);
                	   course.setBook_name(cell.getStringCellValue());
						break;
					}	
					System.out.print("   ");
				}
				
				try {
					//??????????????????Execl???????????????model??????????????????????????
					CourseImp c = new CourseImp();  
					if(c.Exist(course.getId())==true){
						System.out.println("??id????????????????,??????????");
						continue;
					}else{
						c.save(course);
					}
					
				} catch (Exception e) {
					e.printStackTrace();
				}
			
				System.out.println("   ");
			}
			System.out.println("   ");
		}
	}
	
}
